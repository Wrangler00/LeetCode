You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

Example 1:



Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
Output: true
Example 2:



Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: false
 

Constraints:

2 <= coordinates.length <= 1000
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates contains no duplicate point.



//c++
class Solution {
public:
    double getSlope(vector<int> &aa,vector<int> &bb){
        int yslo = bb[0]-aa[0];
        if(!yslo)
            return INFINITY;
        return (bb[1]-aa[1])/yslo;
    }
    
    bool checkStraightLine(vector<vector<int>>& coordinates) {
        int x_0=0,y_0=0;
        int siz = coordinates.size();
        if(siz < 3)
            return true;

        double slope = getSlope(coordinates[0],coordinates[1]);
        x_0 = coordinates[0][0];
        y_0 = coordinates[0][1];
        
        cout<<"SLOPE : "<<slope<<endl;
        cout<<"x_0"<<x_0<<" ,y_0 "<<y_0<<endl;
        
        if(slope == INFINITY){
            cout<<"If ";
            for(auto cord: coordinates){
                if(cord[0] != x_0)
                    return false;
            }
            return true;
        }else if (slope == 0){
            cout<<"else ";
            for(auto cord: coordinates){
                if(cord[1] != y_0)
                    return false;
            }
            return true;
        }
        
        for(auto cord: coordinates){
            int x = cord[0];
            int y = cord[1];
            
            if(y-y_0 != slope*(x-x_0))
                return false;
        }
        
        return true;
    }
};
